plugins {
    id "com.bmuschko.cargo" version "2.2.3"
    id "com.intershop.gradle.jaxb" version "2.0.0"
}

apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'
apply plugin: "com.intershop.gradle.jaxb"

dependencies {

    compile project(":model")
    compile project(":client-schema")
    compile project(":client-service")
    compile "javax.servlet:javax.servlet-api:${SERVLET_API_VERSION}"
    compile "javax.servlet:jstl:${JSTL_VERSION}"
    compile "org.springframework.ws:spring-ws-core:${SPRING_WS_VERSION}"

    compileClasspath "gradle.plugin.com.intershop.gradle.jaxb:jaxb-gradle-plugin:${JAXB_GRADLE_PLUGIN}"
    compileClasspath "com.bmuschko:gradle-cargo-plugin:${CARGO_GRADLE_PLUGIN}"
}

war{
    archiveName "${WAR_FILE_WEBAPP_NAME}.war"
    destinationDir file("$buildDir/../../")
}

/*Auto generated java classes from WSDL*/
jaxb {
    javaGen {
        ublConfig {
            packageName = 'com.pai.ClientSchema'
            schema = file("src/main/resources/messages.wsdl")
            outputDir = file("../client-schema/src/main/java")
            language = 'WSDL'
        }
    }
}

cargo {
    containerId = "${TOMCAT_VERSION}"
    port = "${TOMCAT_DEFAULT_PORT}" as Integer
    remote {
        hostname = "${TOMCAT_HOSTNAME}"
        username = "${TOMCAT_MANAGER_NAME}"
        password = "${TOMCAT_MANAGER_PASSWORD}"
    }
}

clean.doLast {
    file("$buildDir/../../${WAR_FILE_WEBAPP_NAME}.war").delete()
}

